name: tickit
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: cosmtrek/air
    working_dir: /app
    ports:
      - '5749:5749'
    volumes:
      - .:/app
    environment:
      # App configuration
      - PORT=5749
      - APP_PORT=5749
      - DEBUG_MODE=true
      - REQUEST_TIMEOUT=30s
      - THRESHOLD=0.75

      # Database configuration
      - DATABASE_URL=postgres://admin:adminpassword@db:5432/tickit?sslmode=disable
      - DATABASE_MAX_OPEN_CONNS=30
      - DATABASE_MAX_IDLE_CONNS=30
      - DATABASE_MAX_IDLE_TIME=15m
      - MAX_OPEN_CONNS=30

      # Redis configuration
      - REDIS_URL=redis://redis:6379

      # Migration path
      - MIGRATIONS_PATH=internal/database/migrations

      # JWT configuration
      - TICKIT_JWT_KEY=tick_#$%_it
      - JWT_SECRET=tick_#$%_it
    networks:
      - backend
    depends_on:
      db:
        condition: service_started
        required: true
      migrate:
        condition: service_started
        required: true
      redis:
        condition: service_started

  db:
    image: postgres:17.0-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: tickit
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
    networks:
      - backend
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d tickit']
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    working_dir: /app
    image: migrate/migrate
    volumes:
      - ./internal/database/migrations:/migrations
    depends_on:
      db:
        condition: service_started
    command:
      [
        '-path',
        '/internal/database/migrations',
        '-database',
        'postgres://admin:adminpassword@db:5432/tickit?sslmode=disable',
        'up',
        '3',
      ]

  redis:
    image: redis:8.0-M02-alpine
    restart: unless-stopped
    container_name: redis
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - backend

volumes:
  db-data:

networks:
  backend:
    driver: bridge
